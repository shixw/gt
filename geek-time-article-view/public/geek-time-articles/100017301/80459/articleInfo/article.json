{"code":0,"data":{"video_id":"","sku":"100017301","video_cover":"","author_name":"王争","text_read_version":0,"audio_size":667240,"article_cover":"https:\/\/static001.geekbang.org\/resource\/image\/c9\/8d\/c9683a523cd6ef4e8f574c26e9e5fc8d.jpg","subtitles":{},"product_type":"c1","audio_url":"https:\/\/res001.geekbang.org\/media\/audio\/af\/74\/afbbfa53eb94db1cfb059f15c829bd74\/ld\/ld.m3u8","chapter_id":"0","column_had_sub":true,"audio_dubber":"冯永吉","is_finished":false,"inline_video_subtitles":{},"like":{"had_done":false,"count":64},"neighbors":{"left":{"id":81218,"article_title":"春节7天练 | Day 6：图"},"right":{"id":81230,"article_title":"用户故事 | Jerry银银：这一年我的脑海里只有算法"}},"audio_time":"00:00:42","video_height":0,"rate_percent":0,"article_content":"<p>你好，我是王争。今天是节后的第一个工作日，也是我们“春节七天练”的最后一篇。<\/p><hr><h2>几种算法思想必知必会的代码实现<\/h2><h3>回溯<\/h3><ul>\n<li>\n<p>利用回溯算法求解八皇后问题<\/p>\n<\/li>\n<li>\n<p>利用回溯算法求解0-1背包问题<\/p>\n<\/li>\n<\/ul><h3>分治<\/h3><ul>\n<li>利用分治算法求一组数据的逆序对个数<\/li>\n<\/ul><h3>动态规划<\/h3><ul>\n<li>\n<p>0-1背包问题<\/p>\n<\/li>\n<li>\n<p>最小路径和（详细可看@Smallfly整理的 Minimum Path Sum）<\/p>\n<\/li>\n<li>\n<p>编程实现莱文斯坦最短编辑距离<\/p>\n<\/li>\n<li>\n<p>编程实现查找两个字符串的最长公共子序列<\/p>\n<\/li>\n<li>\n<p>编程实现一个数据序列的最长递增子序列<\/p>\n<\/li>\n<\/ul><h2>对应的LeetCode练习题（@Smallfly 整理）<\/h2><ul>\n<li>Regular Expression Matching（正则表达式匹配）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/regular-expression-matching\/\">https:\/\/leetcode.com\/problems\/regular-expression-matching\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/regular-expression-matching\/\">https:\/\/leetcode-cn.com\/problems\/regular-expression-matching\/<\/a><\/p><ul>\n<li>Minimum Path Sum（最小路径和）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/minimum-path-sum\/\">https:\/\/leetcode.com\/problems\/minimum-path-sum\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/minimum-path-sum\/\">https:\/\/leetcode-cn.com\/problems\/minimum-path-sum\/<\/a><\/p><!-- [[[read_end]]] --><ul>\n<li>Coin Change （零钱兑换）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/coin-change\/\">https:\/\/leetcode.com\/problems\/coin-change\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/coin-change\/\">https:\/\/leetcode-cn.com\/problems\/coin-change\/<\/a><\/p><ul>\n<li>Best Time to Buy and Sell Stock（买卖股票的最佳时机）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock\/\">https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/best-time-to-buy-and-sell-stock\/\">https:\/\/leetcode-cn.com\/problems\/best-time-to-buy-and-sell-stock\/<\/a><\/p><ul>\n<li>Maximum Product Subarray（乘积最大子序列）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/maximum-product-subarray\/\">https:\/\/leetcode.com\/problems\/maximum-product-subarray\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/maximum-product-subarray\/\">https:\/\/leetcode-cn.com\/problems\/maximum-product-subarray\/<\/a><\/p><ul>\n<li>Triangle（三角形最小路径和）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/triangle\/\">https:\/\/leetcode.com\/problems\/triangle\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/triangle\/\">https:\/\/leetcode-cn.com\/problems\/triangle\/<\/a><\/p><hr><p>到此为止，七天的练习就结束了。这些题目都是我精选出来的，是基础数据结构和算法中最核心的内容。建议你一定要全部手写练习。如果一遍搞不定，你可以结合前面的章节，多看几遍，反复练习，直到能够全部搞定为止。<\/p><p>学习数据结构和算法，最好的方法就是练习和实践。我相信这在任何知识的学习过程中都适用。<\/p><p>最后，祝你工作顺利！学业进步！<\/p>","footer_cover_data":{"img_url":"","mp_url":"","link_url":""},"article_cover_hidden":false,"column_is_experience":false,"is_required":false,"rate":{},"product_id":100017301,"like_count":73,"had_liked":false,"article_subtitle":"无","audio_download_url":"https:\/\/static001.geekbang.org\/resource\/audio\/af\/74\/afbbfa53eb94db1cfb059f15c829bd74.mp3","id":80459,"had_viewed":false,"article_title":"春节7天练 | Day 7：贪心、分治、回溯和动态规划","column_bgcolor":"#9b7a7a","share":{"content":"为工程师量身打造的数据结构与算法私教课","title":"王争 · 数据结构与算法之美","poster":"https:\/\/static001.geekbang.org\/resource\/image\/0b\/0c\/0b646824c9d90e894322cfedd797630c.jpg","cover":"https:\/\/static001.geekbang.org\/resource\/image\/11\/5b\/11a3a5aa2f5879ec88b284044bacd55b.jpg"},"is_video_preview":false,"article_summary":"到此为止，七天的练习就结束了。这些题目都是我精选出来的，如果一遍搞不定，你可以多看几遍，反复练习，直到能全部搞定为止。","article_poster_wxlite":"https:\/\/static001.geekbang.org\/render\/screen\/a2\/72\/a216713364b2a3e84d350dca0be1b472.jpeg","column_sale_type":2,"article_features":0,"article_could_preview":false,"column_cover":"https:\/\/static001.geekbang.org\/resource\/image\/11\/5b\/11a3a5aa2f5879ec88b284044bacd55b.jpg","column_id":126,"audio_time_arr":{"m":"00","s":"42","h":"00"},"video_time":"","audio_title":"算法音频-七天练day-7","audio_md5":"afbbfa53eb94db1cfb059f15c829bd74","video_size":0,"text_read_percent":0,"comment_count":31,"cid":126,"article_sharetitle":"四种算法思想中必知必会的代码实现","column_is_onboard":true,"article_cshort":"<p>你好，我是王争。今天是节后的第一个工作日，也是我们“春节七天练”的最后一篇。<\/p><hr><h2>几种算法思想必知必会的代码实现<\/h2><h3>回溯<\/h3><ul>\n<li>\n<p>利用回溯算法求解八皇后问题<\/p>\n<\/li>\n<li>\n<p>利用回溯算法求解0-1背包问题<\/p>\n<\/li>\n<\/ul><h3>分治<\/h3><ul>\n<li>利用分治算法求一组数据的逆序对个数<\/li>\n<\/ul><h3>动态规划<\/h3><ul>\n<li>\n<p>0-1背包问题<\/p>\n<\/li>\n<li>\n<p>最小路径和（详细可看@Smallfly整理的 Minimum Path Sum）<\/p>\n<\/li>\n<li>\n<p>编程实现莱文斯坦最短编辑距离<\/p>\n<\/li>\n<li>\n<p>编程实现查找两个字符串的最长公共子序列<\/p>\n<\/li>\n<li>\n<p>编程实现一个数据序列的最长递增子序列<\/p>\n<\/li>\n<\/ul><h2>对应的LeetCode练习题（@Smallfly 整理）<\/h2><ul>\n<li>Regular Expression Matching（正则表达式匹配）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/regular-expression-matching\/\">https:\/\/leetcode.com\/problems\/regular-expression-matching\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/regular-expression-matching\/\">https:\/\/leetcode-cn.com\/problems\/regular-expression-matching\/<\/a><\/p><ul>\n<li>Minimum Path Sum（最小路径和）<\/li>\n<\/ul><p>英文版：<a href=\"https:\/\/leetcode.com\/problems\/minimum-path-sum\/\">https:\/\/leetcode.com\/problems\/minimum-path-sum\/<\/a><\/p><p>中文版：<a href=\"https:\/\/leetcode-cn.com\/problems\/minimum-path-sum\/\">https:\/\/leetcode-cn.com\/problems\/minimum-path-sum\/<\/a><\/p>","video_width":0,"column_could_sub":true,"article_ctime":1549800000,"score":"71549800000","video_media_map":{},"video_preview":{},"video":0,"video_time_arr":{"m":"","s":"","h":""},"video_total_seconds":0},"extra":{},"error":{}}