[{"article_title":"开篇词 | 照着做，你也能成为架构师！","id":"6354"},{"article_title":"01 | 架构到底是指什么？","id":"6458"},{"article_title":"02 | 架构设计的历史背景","id":"6463"},{"article_title":"03 | 架构设计的目的","id":"6472"},{"article_title":"04 | 复杂度来源：高性能","id":"6605"},{"article_title":"05 | 复杂度来源：高可用","id":"6895"},{"article_title":"06 | 复杂度来源：可扩展性","id":"6899"},{"article_title":"07 | 复杂度来源：低成本、安全、规模","id":"6990"},{"article_title":"08 | 架构设计三原则","id":"7071"},{"article_title":"09 | 架构设计原则案例","id":"7392"},{"article_title":"10 | 架构设计流程：识别复杂度","id":"7563"},{"article_title":"11 | 架构设计流程：设计备选方案","id":"7800"},{"article_title":"12 | 架构设计流程：评估和选择备选方案","id":"7832"},{"article_title":"13 | 架构设计流程：详细方案设计","id":"7885"},{"article_title":"14 | 高性能数据库集群：读写分离","id":"8269"},{"article_title":"15 | 高性能数据库集群：分库分表","id":"8373"},{"article_title":"16 | 高性能NoSQL","id":"8377"},{"article_title":"17 | 高性能缓存架构","id":"8640"},{"article_title":"18 | 单服务器高性能模式：PPC与TPC","id":"8697"},{"article_title":"19 | 单服务器高性能模式：Reactor与Proactor","id":"8805"},{"article_title":"20 | 高性能负载均衡：分类及架构","id":"8942"},{"article_title":"21 | 高性能负载均衡：算法","id":"9055"},{"article_title":"22 | 想成为架构师，你必须知道CAP理论","id":"9302"},{"article_title":"23 | 想成为架构师，你必须掌握的CAP细节","id":"9390"},{"article_title":"24 | FMEA方法，排除架构可用性隐患的利器","id":"9391"},{"article_title":"25 | 高可用存储架构：双机架构","id":"9399"},{"article_title":"26 | 高可用存储架构：集群和分区","id":"9766"},{"article_title":"27 | 如何设计计算高可用架构？","id":"9785"},{"article_title":"28 | 业务高可用的保障：异地多活架构","id":"9787"},{"article_title":"29 | 异地多活设计4大技巧","id":"10199"},{"article_title":"30 | 异地多活设计4步走","id":"10204"},{"article_title":"31 | 如何应对接口级的故障？","id":"10312"},{"article_title":"32 | 可扩展架构的基本思想和模式","id":"10688"},{"article_title":"33 | 传统的可扩展架构模式：分层架构和SOA","id":"10790"},{"article_title":"34 | 深入理解微服务架构：银弹 or 焦油坑？","id":"10944"},{"article_title":"35 | 微服务架构最佳实践 - 方法篇","id":"11207"},{"article_title":"36 | 微服务架构最佳实践 - 基础设施篇","id":"11300"},{"article_title":"37 | 微内核架构详解","id":"11610"},{"article_title":"38 | 架构师应该如何判断技术演进的方向？","id":"11760"},{"article_title":"39 | 互联网技术演进的模式","id":"11769"},{"article_title":"40 | 互联网架构模板：“存储层”技术","id":"11947"},{"article_title":"41 | 互联网架构模板：“开发层”和“服务层”技术","id":"12299"},{"article_title":"42 | 互联网架构模板：“网络层”技术","id":"12408"},{"article_title":"43 | 互联网架构模板：“用户层”和“业务层”技术","id":"12572"},{"article_title":"44 | 互联网架构模板：“平台”技术","id":"12801"},{"article_title":"45 | 架构重构内功心法第一式：有的放矢","id":"12953"},{"article_title":"46 | 架构重构内功心法第二式：合纵连横","id":"13007"},{"article_title":"47 | 架构重构内功心法第三式：运筹帷幄","id":"13040"},{"article_title":"48 | 再谈开源项目：如何选择、使用以及二次开发？","id":"13043"},{"article_title":"49 | 谈谈App架构的演进","id":"13411"},{"article_title":"50 | 架构实战：架构设计文档模板","id":"13419"},{"article_title":"51 | 如何画出优秀的软件系统架构图？","id":"482815"},{"article_title":"架构专栏特别放送 | “华仔，放学别走！”第1期","id":"7647"},{"article_title":"架构专栏特别放送 | “华仔，放学别走！” 第2期","id":"8496"},{"article_title":"如何高效地学习开源项目 | “华仔，放学别走！” 第3期","id":"10022"},{"article_title":"架构师成长之路 | “华仔，放学别走！” 第4期","id":"13911"},{"article_title":"架构师必读书单 | “华仔，放学别走！” 第5期","id":"29421"},{"article_title":"新书首发 | 《从零开始学架构》","id":"40573"},{"article_title":"致「从0开始学架构」专栏订阅用户","id":"41397"},{"article_title":"第二季回归 | 照着做，你也能顺利晋升！","id":"313724"},{"article_title":"加餐｜单服务器高性能模式性能对比","id":"316150"},{"article_title":"加餐｜扒一扒中台皇帝的外衣","id":"326375"},{"article_title":"加餐｜业务架构实战营开营了","id":"334919"},{"article_title":"结束语 | 坚持，成就你的技术梦想","id":"14124"},{"article_title":"结课测试｜这些架构技能你都掌握了吗？","id":"215790"}]